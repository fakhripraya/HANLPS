{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Mau cari kosan di daerah cibinong dong min"}, {"role": "assistant", "content":"Ini di cibinong, udah cocok?", "weight": 0}, {"role": "user", "content": "Yang harga 1jtan deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"cibinong\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1250000\", \"greater_than_price\": \"750000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Cari kos murah di Jakut"}, {"role": "assistant", "content":"udah cocok belum bro?", "weight": 0}, {"role": "user", "content": "Kurang bro, yang ada acnya dong sama free laundry harga di 1.2an dong"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"Jakarta Utara\", \"building_proximity\": \"null\", \"building_facility\": \"AC, free laundry\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1450000\", \"greater_than_price\": \"950000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau kos di deket astha dong"}, {"role": "assistant", "content":"nih deket ashta, mantep?", "weight": 0}, {"role": "user", "content": "khusus laki dong min"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"ashta\", \"building_facility\": \"null\", \"building_note\": \"Lelaki\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau dong apartement di daerah sunter pake ac"}, {"role": "assistant", "content":"ini bro daftar apartemen di daerah sunter pake ac, gimana?", "weight": 0}, {"role": "user", "content": "eh yang harganya dibawah 2.5 deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"sunter\", \"building_proximity\": \"null\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"2500000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos murah di bekasi dong, budget di bawah 750k"}, {"role": "assistant", "content":"Ini bro kos bekasi dibawah 750000, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang bro, maunya yang kamar mandi dalam"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"bekasi\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"750000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kos murah di sekitaran rumah sakit ragunan dong"}, {"role": "assistant", "content":"Ini kos murah sekitaran rumah sakit ragunan, udah cocok?", "weight": 0}, {"role": "user", "content": "yang kamar mandi dalam dong"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"rumah sakit ragunan\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kontrakan di menteng dong, budget 2 jtan"}, {"role": "assistant", "content":"kontrakan menteng harga 2 jutaan ya? ini gimana?", "weight": 0}, {"role": "user", "content": "Eh min jangan 2jtan deh, yang murah aja"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"menteng\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"1000000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau dong di daerah tebet, harga 1.2jt"}, {"role": "assistant", "content":"Nih daftar hunian tebet yang 1.2jt, udah cocok?", "weight": 0}, {"role": "user", "content": "Eh min tau kos genyuu ga? yang di tanah kusir itu aja deh"}, {"role": "assistant", "content": "{\"building_title\": \"genyuu\", \"building_address\": \"tanah kusir\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos di daerah mangga 2 dong, pake ac"}, {"role": "assistant", "content":"Nih kosan sekitaran mangga dua yang pake ac, udah cocok?", "weight": 0}, {"role": "user", "content": "Min kos ibu herni aja deh yang di bintaro"}, {"role": "assistant", "content": "{\"building_title\": \"ibu herni\", \"building_address\": \"bintaro\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos yang deket ciputat, fasilitas kolam renang dan pake ac min"}, {"role": "assistant", "content":"Nih kosan deket ciputat yang pake kolam renang dan pake ac, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang min coba di daerah pamulang deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"pamulang\", \"building_proximity\": \"null\", \"building_facility\": \"kolam renang, ac\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos pake ac, harga 2jtan yang kamar mandi dalam"}, {"role": "assistant", "content":"Nih kosan pake ac dan kamar mandi dalam harga 2jtan, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang, coba di ancol aja deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"ancol\", \"building_proximity\": \"null\", \"building_facility\": \"ac, kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2250000\", \"greater_than_price\": \"1750000\" }", "weight": 1}]}