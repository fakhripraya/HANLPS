{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Info kontrakan di bogor"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"bogor\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Cari kos murah di Jakut"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"Jakarta Utara\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Ada kos dekat kampus Trisakti?"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"kampus Trisakti\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kontrakan 2 kamar di Jakarta Selatan"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"Jakarta Selatan\", \"building_proximity\": \"null\", \"building_facility\": \"2 kamar\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kontrakan murah di depok, budget di bawah 1 juta"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"depok\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"1000000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kos murah di deket gandaria city"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"gandaria city\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kos eksklusif di scbd, budget 2 jtan"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"scbd\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2250000\", \"greater_than_price\": \"1750000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau dong di daerah tebet, harga 1.2jt"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"tebet\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1450000\", \"greater_than_price\": \"950000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "yang deket menara astra, harga 1.5jt pake ac min"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"menara astra\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1750000\", \"greater_than_price\": \"1250000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos ancol deket kantor indomaret, harga 2.5jtan yang kamar mandi dalam"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"ancol\", \"building_proximity\": \"kantor indomaret\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2750000\", \"greater_than_price\": \"2250000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Info kontrakan di bogor"}, {"role": "assistant", "content":"Ini gimana udah bagus?", "weight": 0}, {"role": "user", "content": "Yang harga 1.3an deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"bogor\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1550000\", \"greater_than_price\": \"1150000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Cari kos murah di Jakut"}, {"role": "assistant", "content":"udah cocok belum bro?", "weight": 0}, {"role": "user", "content": "Kurang bro, yang ada acnya dong sama free laundry"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"Jakarta Utara\", \"building_proximity\": \"null\", \"building_facility\": \"AC, free laundry\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Ada kos dekat kampus Trisakti?"}, {"role": "assistant", "content":"kalau ini udah cocok sama kamu?", "weight": 0}, {"role": "user", "content": "khusus perempuan dong min"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"kampus Trisakti\", \"building_facility\": \"null\", \"building_note\": \"Perempuan\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kontrakan 2 kamar di Jakarta Selatan"}, {"role": "assistant", "content":"ini bro daftar kontrakan 2 kamar, gimana?", "weight": 0}, {"role": "user", "content": "eh yang harganya dibawah 1.5 deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"Jakarta Selatan\", \"building_proximity\": \"null\", \"building_facility\": \"2 kamar\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kontrakan murah di depok, budget di bawah 1 juta"}, {"role": "assistant", "content":"Ini bro kontrakan depok dibawah 1 juta, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang bro, yang ada acnya dong dan khusus laki laki"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"depok\", \"building_proximity\": \"null\", \"building_facility\": \"AC\", \"building_note\": \"Lelaki\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"1000000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kos murah di deket gandaria city"}, {"role": "assistant", "content":"Ini kos deket gandaria city, udah cocok?", "weight": 0}, {"role": "user", "content": "Eh di blok m aja deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"blok m\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kos eksklusif di scbd, budget 2 jtan"}, {"role": "assistant", "content":"kos SCBD harga 2 jutaan ya? ini gimana?", "weight": 0}, {"role": "user", "content": "Eh min jangan scbdnya deh, di senopati aja"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"senopati\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2250000\", \"greater_than_price\": \"1750000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau dong di daerah tebet, harga 1.2jt"}, {"role": "assistant", "content":"Nih daftar hunian tebet yang 1.2jt, udah cocok?", "weight": 0}, {"role": "user", "content": "Eh min tau kos sambina ga? coba dong"}, {"role": "assistant", "content": "{\"building_title\": \"sambina\", \"building_address\": \"null\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kosdi daerah mangga 2 dong, harga 1.2jt"}, {"role": "assistant", "content":"Nih kosan sekitaran mangga dua yang 1.2jt, udah cocok?", "weight": 0}, {"role": "user", "content": "Min yuugen kost aja deh yang di bintaro"}, {"role": "assistant", "content": "{\"building_title\": \"yuugen kost\", \"building_address\": \"bintaro\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "yang deket menara astra, harga 1.5jt pake ac min"}, {"role": "assistant", "content":"Nih kosan deket menara astra harga 1.5 juta, pake ac kan? udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang min coba di slipi deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"slipi\", \"building_proximity\": \"null\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1750000\", \"greater_than_price\": \"1250000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos ancol deket kantor indomaret, harga 2.5jtan yang kamar mandi dalam"}, {"role": "assistant", "content":"Nih kosan ancol deket kantor indomaret 2.5jtan dengan kamar mandi dalam, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang, coba di pademangan aja deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"pademangan\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2750000\", \"greater_than_price\": \"2250000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Mau cari kosan di daerah cibinong dong min"}, {"role": "assistant", "content":"Ini di cibinong, udah cocok?", "weight": 0}, {"role": "user", "content": "Yang harga 1jtan deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"cibinong\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1250000\", \"greater_than_price\": \"750000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Cari kos murah di Jakut"}, {"role": "assistant", "content":"udah cocok belum bro?", "weight": 0}, {"role": "user", "content": "Kurang bro, yang ada acnya dong sama free laundry harga di 1.2an dong"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"Jakarta Utara\", \"building_proximity\": \"null\", \"building_facility\": \"AC, free laundry\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1450000\", \"greater_than_price\": \"950000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau kos di deket astha dong"}, {"role": "assistant", "content":"nih deket ashta, mantep?", "weight": 0}, {"role": "user", "content": "khusus laki dong min"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"ashta\", \"building_facility\": \"null\", \"building_note\": \"Lelaki\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau dong apartement di daerah sunter pake ac"}, {"role": "assistant", "content":"ini bro daftar apartemen di daerah sunter pake ac, gimana?", "weight": 0}, {"role": "user", "content": "eh yang harganya dibawah 2.5 deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"sunter\", \"building_proximity\": \"null\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"2500000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos murah di bekasi dong, budget di bawah 750k"}, {"role": "assistant", "content":"Ini bro kos bekasi dibawah 750000, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang bro, maunya yang kamar mandi dalam"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"bekasi\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"750000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kos murah di sekitaran rumah sakit ragunan dong"}, {"role": "assistant", "content":"Ini kos murah sekitaran rumah sakit ragunan, udah cocok?", "weight": 0}, {"role": "user", "content": "yang kamar mandi dalam dong"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"rumah sakit ragunan\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kontrakan di menteng dong, budget 2 jtan"}, {"role": "assistant", "content":"kontrakan menteng harga 2 jutaan ya? ini gimana?", "weight": 0}, {"role": "user", "content": "Eh min jangan 2jtan deh, yang murah aja"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"menteng\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"1000000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau dong di daerah tebet, harga 1.2jt"}, {"role": "assistant", "content":"Nih daftar hunian tebet yang 1.2jt, udah cocok?", "weight": 0}, {"role": "user", "content": "Eh min tau kos genyuu ga? yang di tanah kusir itu aja deh"}, {"role": "assistant", "content": "{\"building_title\": \"genyuu\", \"building_address\": \"tanah kusir\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos di daerah mangga 2 dong, pake ac"}, {"role": "assistant", "content":"Nih kosan sekitaran mangga dua yang pake ac, udah cocok?", "weight": 0}, {"role": "user", "content": "Min kos ibu herni aja deh yang di bintaro"}, {"role": "assistant", "content": "{\"building_title\": \"ibu herni\", \"building_address\": \"bintaro\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos yang deket ciputat, fasilitas kolam renang dan pake ac min"}, {"role": "assistant", "content":"Nih kosan deket ciputat yang pake kolam renang dan pake ac, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang min coba di daerah pamulang deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"pamulang\", \"building_proximity\": \"null\", \"building_facility\": \"kolam renang, ac\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos pake ac, harga 2jtan yang kamar mandi dalam"}, {"role": "assistant", "content":"Nih kosan pake ac dan kamar mandi dalam harga 2jtan, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang, coba di ancol aja deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"ancol\", \"building_proximity\": \"null\", \"building_facility\": \"ac, kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2250000\", \"greater_than_price\": \"1750000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "coba kos harga 200kan"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"450000\", \"greater_than_price\": \"0\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau kos harga 500an dong kak"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"750000\", \"greater_than_price\": \"250000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kontrakan cibinong harga 200kan"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"cibinong\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"450000\", \"greater_than_price\": \"0\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kontrakan disekitar pjmi"}, {"role": "assistant", "content":"nih kontrakan di sekitaran pjmi, mantep?", "weight": 0}, {"role": "user", "content": "harga 200an dong trus kamar mandi dalem"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"pjmi\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"450000\", \"greater_than_price\": \"0\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "min ada kos di daerah deket kantor herbalife ga"}, {"role": "assistant", "content":"udah cocok belum bro?", "weight": 0}, {"role": "user", "content": "yang deket kuningan deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"kuningan\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "min ada kos di blok m plaza ga"}, {"role": "assistant", "content":"udah cocok belum bro?", "weight": 0}, {"role": "user", "content": "yang deket gor deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"blok m plaza\", \"building_proximity\": \"gor\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "coba dong min kos sekitaran tanah abang"}, {"role": "assistant", "content":"nih sekitaran tanah abang, mantep?", "weight": 0}, {"role": "user", "content": "khusus laki dong min harga 100kan wkwkkw"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"tanah abang\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"Lelaki\", \"filter_type\": \"AROUND\", \"less_than_price\": \"350000\", \"greater_than_price\": \"0\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "coba di deket puncak pake ac"}, {"role": "assistant", "content":"ini bro hunian di deket puncak pake ac, gimana?", "weight": 0}, {"role": "user", "content": "eh yang harganya dibawah 500 deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"puncak\", \"building_proximity\": \"null\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"500000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos murah di senayan dong, budgetku 650"}, {"role": "assistant", "content":"Ini bro kos sekitar senayan dibawah 650000, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang bro, maunya yang kamar mandi dalam"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"senayan\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"650000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kos murah di sekitaran rsud fatmawati dong"}, {"role": "assistant", "content":"Ini kos murah sekitaran rsud fatmawati, udah cocok?", "weight": 0}, {"role": "user", "content": "eh budgetku sekitar 750 wkkwkw"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"rsud fatmawati\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1000000\", \"greater_than_price\": \"500000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kontrakan di mampang prapatan dong, budget 2 jtan"}, {"role": "assistant", "content":"kontrakan mampang prapatan harga 2 jutaan ya? ini gimana?", "weight": 0}, {"role": "user", "content": "mahalan gapapa deh min"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"mampang prapatan\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"GREATER_THAN\", \"less_than_price\": \"null\", \"greater_than_price\": \"2000000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau dong di deket gbk, harga 1.1jt"}, {"role": "assistant", "content":"Nih daftar hunian deket gbk yang 1.1jt, udah cocok?", "weight": 0}, {"role": "user", "content": "mantap, tp kurang dapur"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"gbk\", \"building_facility\": \"dapur\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1350000\", \"greater_than_price\": \"850000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos di daerah mangga besar dong, pake ac"}, {"role": "assistant", "content":"Nih kosan sekitaran mangga besar yang pake ac, udah cocok?", "weight": 0}, {"role": "user", "content": "harga 400 deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"mangga besar\", \"building_proximity\": \"null\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"650000\", \"greater_than_price\": \"150000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos yang sekitar grogol, fasilitas dapur, kamar mandi dalam dan pake ac min"}, {"role": "assistant", "content":"Nih kosan deket grogol dengan fasilitas dapur, kamar mandi dalam, dan pake ac, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang min sama fasilitas jemuran dong"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"grogol\", \"building_proximity\": \"null\", \"building_facility\": \"dapur, kamar mandi dalam, ac, jemuran\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos pake ac, harga 2jtan yang kamar mandi dalam"}, {"role": "assistant", "content":"Nih kosan pake ac dan kamar mandi dalam harga 2jtan, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang, coba di mangga 2 aja deh gajadi pake ac"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"mangga 2\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2250000\", \"greater_than_price\": \"1750000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos dong yang ac"}, {"role": "assistant", "content":"Nih kosan pake ac, udah cocok?", "weight": 0}, {"role": "user", "content": "harga 1-2jtan min di manggarai"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"manggarai\", \"building_proximity\": \"null\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1000000\", \"greater_than_price\": \"2000000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos dong"}, {"role": "assistant", "content":"Nih kosan, udah cocok?", "weight": 0}, {"role": "user", "content": "harga 1.5-2jtan min di manggarai"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"manggarai\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"2000000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos dong di manggarai"}, {"role": "assistant", "content":"Nih kosan di manggarai, udah cocok?", "weight": 0}, {"role": "user", "content": "budgetku cuma 1-1.2jt min"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"manggarai\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1200000\", \"greater_than_price\": \"1000000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "coba kos harga 200 - 500 an min"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"500000\", \"greater_than_price\": \"200000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau kos harga 500 sampe 700 dong kak"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"700000\", \"greater_than_price\": \"500000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kontrakan pasar minggu harga range 1.5 sampe 2jt dong"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"pasar minggu\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2000000\", \"greater_than_price\": \"1500000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos disekitar pasmod bintaro harga 1200000 - 1500000"}, {"role": "assistant", "content":"nih kos di pasmod bintaro harga 1200000 - 1500000, mantep?", "weight": 0}, {"role": "user", "content": "sama kamar mandi dalem please"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"pasmod bintaro\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"1200000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "min ada kos di daerah deket kantor oleos ga harga 1 - 1.5 deh"}, {"role": "assistant", "content":"udah cocok belum bro?", "weight": 0}, {"role": "user", "content": "yang kamar mandi dalem deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"kantor oleos\", \"building_facility\": \"kamar mandi dalem\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"1000000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "min ada kos di blok m plaza ga"}, {"role": "assistant", "content":"udah cocok belum bro?", "weight": 0}, {"role": "user", "content": "yang deket gor sama harga 1.8 - 2jtan deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"blok m plaza\", \"building_proximity\": \"gor\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2000000\", \"greater_than_price\": \"1800000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kontrakan sekitaran tanah abang dong"}, {"role": "assistant", "content":"nih kontrakan sekitaran tanah abang, mantep?", "weight": 0}, {"role": "user", "content": "khusus laki dong min harga 500 - 700k an wkwkkw"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"tanah abang\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"Lelaki\", \"filter_type\": \"AROUND\", \"less_than_price\": \"750000\", \"greater_than_price\": \"500000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "coba di deket puncak pake ac"}, {"role": "assistant", "content":"ini bro hunian di deket puncak pake ac, gimana?", "weight": 0}, {"role": "user", "content": "eh yang harganya 500 - 1jt deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"puncak\", \"building_proximity\": \"null\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1000000\", \"greater_than_price\": \"500000\" }", "weight": 1}]}