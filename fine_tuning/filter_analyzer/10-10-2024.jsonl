
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "coba kos harga 200kan"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"450000\", \"greater_than_price\": \"0\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau kos harga 500an dong kak"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"750000\", \"greater_than_price\": \"250000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kontrakan cibinong harga 200kan"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"cibinong\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"450000\", \"greater_than_price\": \"0\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kontrakan disekitar pjmi"}, {"role": "assistant", "content":"nih kontrakan di sekitaran pjmi, mantep?", "weight": 0}, {"role": "user", "content": "harga 200an dong trus kamar mandi dalem"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"pjmi\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"450000\", \"greater_than_price\": \"0\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "min ada kos di daerah deket kantor herbalife ga"}, {"role": "assistant", "content":"udah cocok belum bro?", "weight": 0}, {"role": "user", "content": "yang deket kuningan deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"kuningan\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "min ada kos di blok m plaza ga"}, {"role": "assistant", "content":"udah cocok belum bro?", "weight": 0}, {"role": "user", "content": "yang deket gor deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"blok m plaza\", \"building_proximity\": \"gor\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "coba dong min kos sekitaran tanah abang"}, {"role": "assistant", "content":"nih sekitaran tanah abang, mantep?", "weight": 0}, {"role": "user", "content": "khusus laki dong min harga 100kan wkwkkw"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"tanah abang\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"Lelaki\", \"filter_type\": \"AROUND\", \"less_than_price\": \"350000\", \"greater_than_price\": \"0\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "coba di deket puncak pake ac"}, {"role": "assistant", "content":"ini bro hunian di deket puncak pake ac, gimana?", "weight": 0}, {"role": "user", "content": "eh yang harganya dibawah 500 deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"puncak\", \"building_proximity\": \"null\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"500000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos murah di senayan dong, budgetku 650"}, {"role": "assistant", "content":"Ini bro kos sekitar senayan dibawah 650000, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang bro, maunya yang kamar mandi dalam"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"senayan\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"LESS_THAN\", \"less_than_price\": \"650000\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kos murah di sekitaran rsud fatmawati dong"}, {"role": "assistant", "content":"Ini kos murah sekitaran rsud fatmawati, udah cocok?", "weight": 0}, {"role": "user", "content": "eh budgetku sekitar 750 wkkwkw"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"rsud fatmawati\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1000000\", \"greater_than_price\": \"500000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "Kontrakan di mampang prapatan dong, budget 2 jtan"}, {"role": "assistant", "content":"kontrakan mampang prapatan harga 2 jutaan ya? ini gimana?", "weight": 0}, {"role": "user", "content": "mahalan gapapa deh min"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"mampang prapatan\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"GREATER_THAN\", \"less_than_price\": \"null\", \"greater_than_price\": \"2000000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau dong di deket gbk, harga 1.1jt"}, {"role": "assistant", "content":"Nih daftar hunian deket gbk yang 1.1jt, udah cocok?", "weight": 0}, {"role": "user", "content": "mantap, tp kurang dapur"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"gbk\", \"building_facility\": \"dapur\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1350000\", \"greater_than_price\": \"850000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos di daerah mangga besar dong, pake ac"}, {"role": "assistant", "content":"Nih kosan sekitaran mangga besar yang pake ac, udah cocok?", "weight": 0}, {"role": "user", "content": "harga 400 deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"mangga besar\", \"building_proximity\": \"null\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"650000\", \"greater_than_price\": \"150000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos yang sekitar grogol, fasilitas dapur, kamar mandi dalam dan pake ac min"}, {"role": "assistant", "content":"Nih kosan deket grogol dengan fasilitas dapur, kamar mandi dalam, dan pake ac, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang min sama fasilitas jemuran dong"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"grogol\", \"building_proximity\": \"null\", \"building_facility\": \"dapur, kamar mandi dalam, ac, jemuran\", \"building_note\": \"null\", \"filter_type\": \"null\", \"less_than_price\": \"null\", \"greater_than_price\": \"null\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos pake ac, harga 2jtan yang kamar mandi dalam"}, {"role": "assistant", "content":"Nih kosan pake ac dan kamar mandi dalam harga 2jtan, udah cocok?", "weight": 0}, {"role": "user", "content": "Kurang, coba di mangga 2 aja deh gajadi pake ac"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"mangga 2\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2250000\", \"greater_than_price\": \"1750000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos dong yang ac"}, {"role": "assistant", "content":"Nih kosan pake ac, udah cocok?", "weight": 0}, {"role": "user", "content": "harga 1-2jtan min di manggarai"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"manggarai\", \"building_proximity\": \"null\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1000000\", \"greater_than_price\": \"2000000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos dong"}, {"role": "assistant", "content":"Nih kosan, udah cocok?", "weight": 0}, {"role": "user", "content": "harga 1.5-2jtan min di manggarai"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"manggarai\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"2000000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and define the extracted data based on the prompt and the conversation context. 1. analyze the context of the incoming input based on the conversation, 2. simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. the enum for gender is [Lelaki, Perempuan, Campur, Bebas], provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "info kos dong di manggarai"}, {"role": "assistant", "content":"Nih kosan di manggarai, udah cocok?", "weight": 0}, {"role": "user", "content": "budgetku cuma 1-1.2jt min"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"manggarai\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1000000\", \"greater_than_price\": \"1200000\" }", "weight": 1}]}