{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "coba kos harga 200 - 500 an min"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"500000\", \"greater_than_price\": \"200000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "mau kos harga 500 sampe 700 dong kak"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"700000\", \"greater_than_price\": \"500000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kontrakan pasar minggu harga range 1.5 sampe 2jt dong"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"pasar minggu\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2000000\", \"greater_than_price\": \"1500000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kos disekitar pasmod bintaro harga 1200000 - 1500000"}, {"role": "assistant", "content":"nih kos di pasmod bintaro harga 1200000 - 1500000, mantep?", "weight": 0}, {"role": "user", "content": "sama kamar mandi dalem please"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"pasmod bintaro\", \"building_proximity\": \"null\", \"building_facility\": \"kamar mandi dalam\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"1200000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "min ada kos di daerah deket kantor oleos ga harga 1 - 1.5 deh"}, {"role": "assistant", "content":"udah cocok belum bro?", "weight": 0}, {"role": "user", "content": "yang kamar mandi dalem deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"null\", \"building_proximity\": \"kantor oleos\", \"building_facility\": \"kamar mandi dalem\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1500000\", \"greater_than_price\": \"1000000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "min ada kos di blok m plaza ga"}, {"role": "assistant", "content":"udah cocok belum bro?", "weight": 0}, {"role": "user", "content": "yang deket gor sama harga 1.8 - 2jtan deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"blok m plaza\", \"building_proximity\": \"gor\", \"building_facility\": \"null\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"2000000\", \"greater_than_price\": \"1800000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "kontrakan sekitaran tanah abang dong"}, {"role": "assistant", "content":"nih kontrakan sekitaran tanah abang, mantep?", "weight": 0}, {"role": "user", "content": "khusus laki dong min harga 500 - 700k an wkwkkw"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"tanah abang\", \"building_proximity\": \"null\", \"building_facility\": \"null\", \"building_note\": \"Lelaki\", \"filter_type\": \"AROUND\", \"less_than_price\": \"750000\", \"greater_than_price\": \"500000\" }", "weight": 1}]}
{"messages": [{"role": "system", "content": "Understand the context of the conversation and extract structured data based on the prompt and the conversation context. 1. Analyze the context of the incoming input based on the conversation, 2. Simulate extracting data from the conversation, 3. If the filter type is to be AROUND, make sure to adjust the price for greater_than_price: xxx - 250000 and less_than_price: xxx + 250000, 4. If the input implies desires for cheap prices, set the price to be LESS_THAN 1500000 and if it implies for high budget set the price to be GREATER_THAN 2000000 this applies only if the input gave no budget, 5. The enum for gender is [Lelaki, Perempuan, Campur, Bebas], 6. If the input implies the price to be between 2 prices set the filter type to be AROUND and define both less_than_price and greater_than_price. provide the following fields in a JSON dict, where applicable: \"building_title\", \"building_address\", \"building_proximity\", \"building_facility\", \"building_note\", \"filter_type\", \"less_than_price\", and \"greater_than_price\"., NOTE: filter price can't be less than or equal 0 if the filter reach 0 or minus, give 0 value"}, {"role": "user", "content": "coba di deket puncak pake ac"}, {"role": "assistant", "content":"ini bro hunian di deket puncak pake ac, gimana?", "weight": 0}, {"role": "user", "content": "eh yang harganya 500 - 1jt deh"}, {"role": "assistant", "content": "{\"building_title\": \"null\", \"building_address\": \"puncak\", \"building_proximity\": \"null\", \"building_facility\": \"ac\", \"building_note\": \"null\", \"filter_type\": \"AROUND\", \"less_than_price\": \"1000000\", \"greater_than_price\": \"500000\" }", "weight": 1}]}